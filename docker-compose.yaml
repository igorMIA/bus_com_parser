version: '3'

services:
  django:
    image: django_boost
    build: .
    command: bash -c "python boost/manage.py makemigrations inception && python boost/manage.py migrate && python boost/manage.py runserver 0.0.0.0:8080"
    volumes:
      - .:/app
    env_file:
      .env
    ports:
      - 8080:8080
    depends_on:
      - db
      - celery
      - elasticsearch
      - kibana
      - scrapyd_deploy
  db:
    image: postgres
    ports:
      - 5432:5432
  rabbitmq:
    image: rabbitmq:3.7.5-management
    hostname: app-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq/mnesia/rabbit@app-rabbitmq:cached
    env_file:
      .env
  celery:
    image: django_boost
    working_dir: /app/boost
    command: bash -c "rm -f celeryd.pid celerybeat-schedule celerybeat.pid && celery -A boost worker -l info --detach && celery -A boost beat --detach && celery flower -A boost --address=0.0.0.0 --port=8888"
    ports:
      - 8888:8888
    volumes:
      - .:/app
    env_file:
      .env
    depends_on:
      - rabbitmq
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - cluster.name=docker-cluster
      - node.name=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - 5601:5601
    env_file:
      .env
    depends_on:
      - elasticsearch
  scrapyd:
      image: django_boost
      command: bash -c "rm -f scrapyd_pidfile && scrapyd --pidfile scrapyd_pidfile"
      ports:
        - 6800:6800
      volumes:
        - .:/app
  scrapyd_deploy:
    image: django_boost
    working_dir: /app/boost
    command: bash -c "scrapyd-deploy"
    volumes:
      - .:/app
    depends_on:
      - scrapyd
    restart: on-failure
  tests:
    image: django_boost
    command: bash -c "python boost/manage.py test tests"
    env_file:
      .env
    volumes:
      - .:/app
